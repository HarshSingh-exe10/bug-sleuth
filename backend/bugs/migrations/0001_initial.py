# Generated by Django 5.2.5 on 2025-08-18 10:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BugReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, validators=[django.core.validators.MinLengthValidator(5)])),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(10)])),
                ('vector', models.JSONField(blank=True, null=True)),
                ('source', models.CharField(default='dataset', max_length=100)),
                ('similarity_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'bug_reports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['title'], name='bug_reports_title_0c7e42_idx'), models.Index(fields=['created_at'], name='bug_reports_created_c948ac_idx'), models.Index(fields=['source'], name='bug_reports_source_026dd0_idx')],
            },
        ),
        migrations.CreateModel(
            name='DatasetUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('total_records', models.PositiveIntegerField(blank=True, null=True)),
                ('processed_records', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('uploading', 'Uploading'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='uploading', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dataset_uploads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserBugSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, validators=[django.core.validators.MinLengthValidator(5)])),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(10)])),
                ('vector', models.JSONField(blank=True, null=True)),
                ('feedback_helpful', models.BooleanField(blank=True, null=True)),
                ('feedback_comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bug_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_bug_submissions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SimilarityResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField()),
                ('rank', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('similar_bug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bugs.bugreport')),
                ('user_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarity_results', to='bugs.userbugsubmission')),
            ],
            options={
                'db_table': 'similarity_results',
                'ordering': ['user_submission', 'rank'],
                'unique_together': {('user_submission', 'similar_bug')},
            },
        ),
    ]
